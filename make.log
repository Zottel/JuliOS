Assembling kernel image ... 

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000100000                . = 0x100000

.text           0x0000000000100000      0x9fc
 *(.text)
 .text          0x0000000000100000       0x4d startup.o
                0x000000000010000c                loader
 *fill*         0x000000000010004d        0x3 00
 .text          0x0000000000100050      0x35a kernel.o
                0x0000000000100050                kmain(unsigned long, multiboot_info*)
 *fill*         0x00000000001003aa        0x2 00
 .text          0x00000000001003ac      0x30d screen.o
                0x00000000001003ec                Screen::setcolor(unsigned char)
                0x000000000010062a                Screen::hexdump(unsigned char)
                0x000000000010053a                Screen::putchar(char)
                0x00000000001005c8                Screen::putcharxy(char, int, int)
                0x00000000001004ec                Screen::clear()
                0x00000000001003ac                Screen::Screen(char*, int, int)
                0x0000000000100680                Screen::hexdump(char*, unsigned int)
                0x0000000000100404                Screen::newline()
                0x00000000001005fa                Screen::print(char const*)
                0x00000000001003cc                Screen::Screen(char*, int, int)
 *fill*         0x00000000001006b9        0x3 00
 .text          0x00000000001006bc       0x71 memory.o
                0x00000000001006f4                operator new[](unsigned int)
                0x00000000001006bc                Memory::allocate(unsigned int)
                0x0000000000100707                operator delete(void*)
                0x000000000010071a                operator delete[](void*)
                0x00000000001006dc                Memory::free(void*)
                0x00000000001006e1                operator new(unsigned int)
 *fill*         0x000000000010072d        0x3 00
 .text          0x0000000000100730       0x56 io.o
                0x0000000000100730                IO::inb(unsigned short)
                0x000000000010074c                IO::outb(unsigned short, unsigned char)
                0x000000000010076a                IO::wait()
 *fill*         0x0000000000100786        0x2 00
 .text          0x0000000000100788       0xe9 interrupts.o
                0x0000000000100788                Interrupts::enable()
                0x0000000000100794                Interrupts::remap()
                0x0000000000100864                Interrupts::setup()
                0x000000000010078e                Interrupts::disable()
 *fill*         0x0000000000100871        0x3 00
 .text          0x0000000000100874       0xc3 keyboard.o
                0x00000000001008e0                Keyboard::is_locked()
                0x0000000000100896                Keyboard::write_cmd(unsigned char)
                0x0000000000100910                Keyboard::has_output()
                0x00000000001008fc                Keyboard::selftest_success()
                0x00000000001008cc                Keyboard::status()
                0x0000000000100874                Keyboard::write_data(unsigned char)
                0x0000000000100924                Keyboard::has_input()
                0x00000000001008b8                Keyboard::read_data()
 *fill*         0x0000000000100937        0x1 00
 .text          0x0000000000100938       0xc4 cmos.o
                0x00000000001009e8                CMOS::get_seconds()
                0x00000000001009c0                CMOS::get_hours()
                0x0000000000100998                CMOS::get_month()
                0x00000000001009d4                CMOS::get_minutes()
                0x00000000001009ac                CMOS::get_day()
                0x0000000000100938                CMOS::read(int)
                0x0000000000100984                CMOS::get_year()

.rodata         0x0000000000101000       0xf0
 *(.rodata)
 .rodata        0x0000000000101000       0xdf kernel.o
 .rodata        0x00000000001010df       0x11 screen.o

.rel.dyn        0x00000000001010f0        0x0
 .rel.text      0x0000000000000000        0x0 startup.o

.data           0x0000000000102000        0x4
                0x0000000000102000                start_ctors = .
 *(.ctor*)
                0x0000000000102000                end_ctors = .
                0x0000000000102000                start_dtors = .
 *(.dtor*)
                0x0000000000102000                end_dtors = .
 *(.data)
 .data          0x0000000000102000        0x0 kernel.o
 .data          0x0000000000102000        0x0 screen.o
 .data          0x0000000000102000        0x4 memory.o
                0x0000000000102000                Memory::start
 .data          0x0000000000102004        0x0 io.o
 .data          0x0000000000102004        0x0 interrupts.o
 .data          0x0000000000102004        0x0 keyboard.o
 .data          0x0000000000102004        0x0 cmos.o

.bss            0x0000000000102004     0x4000
                0x0000000000102004                _sbss = .
 *(COMMON)
 *(.bss)
 .bss           0x0000000000102004     0x4000 startup.o
 .bss           0x0000000000106004        0x0 kernel.o
 .bss           0x0000000000106004        0x0 screen.o
 .bss           0x0000000000106004        0x0 memory.o
 .bss           0x0000000000106004        0x0 io.o
 .bss           0x0000000000106004        0x0 interrupts.o
 .bss           0x0000000000106004        0x0 keyboard.o
 .bss           0x0000000000106004        0x0 cmos.o
                0x0000000000106004                _ebss = .
LOAD startup.o
LOAD kernel.o
LOAD screen.o
LOAD memory.o
LOAD io.o
LOAD interrupts.o
LOAD keyboard.o
LOAD cmos.o
OUTPUT(kernel elf32-i386)

.comment        0x0000000000000000       0xf8
 .comment       0x0000000000000000       0x1f startup.o
 .comment       0x000000000000001f       0x1f kernel.o
 .comment       0x000000000000003e       0x1f screen.o
 .comment       0x000000000000005d       0x1f memory.o
 .comment       0x000000000000007c       0x1f io.o
 .comment       0x000000000000009b       0x1f interrupts.o
 .comment       0x00000000000000ba       0x1f keyboard.o
 .comment       0x00000000000000d9       0x1f cmos.o

.note.GNU-stack
                0x0000000000000000        0x0
 .note.GNU-stack
                0x0000000000000000        0x0 kernel.o
 .note.GNU-stack
                0x0000000000000000        0x0 screen.o
 .note.GNU-stack
                0x0000000000000000        0x0 memory.o
 .note.GNU-stack
                0x0000000000000000        0x0 io.o
 .note.GNU-stack
                0x0000000000000000        0x0 interrupts.o
 .note.GNU-stack
                0x0000000000000000        0x0 keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 cmos.o

Cross Reference Table

Symbol                                            File
CMOS::get_day()                                   cmos.o
                                                  kernel.o
CMOS::get_hours()                                 cmos.o
                                                  kernel.o
CMOS::get_minutes()                               cmos.o
                                                  kernel.o
CMOS::get_month()                                 cmos.o
                                                  kernel.o
CMOS::get_seconds()                               cmos.o
                                                  kernel.o
CMOS::get_year()                                  cmos.o
                                                  kernel.o
CMOS::read(int)                                   cmos.o
IO::inb(unsigned short)                           io.o
                                                  cmos.o
                                                  keyboard.o
IO::outb(unsigned short, unsigned char)           io.o
                                                  cmos.o
                                                  keyboard.o
                                                  interrupts.o
IO::wait()                                        io.o
Interrupts::disable()                             interrupts.o
Interrupts::enable()                              interrupts.o
Interrupts::remap()                               interrupts.o
Interrupts::setup()                               interrupts.o
                                                  kernel.o
Keyboard::has_input()                             keyboard.o
Keyboard::has_output()                            keyboard.o
                                                  kernel.o
Keyboard::is_locked()                             keyboard.o
                                                  kernel.o
Keyboard::read_data()                             keyboard.o
                                                  kernel.o
Keyboard::selftest_success()                      keyboard.o
Keyboard::status()                                keyboard.o
Keyboard::write_cmd(unsigned char)                keyboard.o
Keyboard::write_data(unsigned char)               keyboard.o
Memory::allocate(unsigned int)                    memory.o
Memory::free(void*)                               memory.o
Memory::start                                     memory.o
Screen::Screen(char*, int, int)                   screen.o
Screen::Screen(char*, int, int)                   screen.o
                                                  kernel.o
Screen::clear()                                   screen.o
                                                  kernel.o
Screen::hexdump(char*, unsigned int)              screen.o
Screen::hexdump(unsigned char)                    screen.o
                                                  kernel.o
Screen::newline()                                 screen.o
Screen::print(char const*)                        screen.o
                                                  kernel.o
Screen::putchar(char)                             screen.o
Screen::putcharxy(char, int, int)                 screen.o
Screen::setcolor(unsigned char)                   screen.o
                                                  kernel.o
end_ctors                                         startup.o
end_dtors                                         startup.o
kmain                                             startup.o
kmain(unsigned long, multiboot_info*)             kernel.o
loader                                            startup.o
operator delete(void*)                            memory.o
operator delete[](void*)                          memory.o
operator new(unsigned int)                        memory.o
operator new[](unsigned int)                      memory.o
start_ctors                                       startup.o
start_dtors                                       startup.o
